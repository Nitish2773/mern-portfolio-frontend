{"version":3,"file":"static/js/221.e061e0f7.chunk.js","mappings":"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","sources":["pages/Experience.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { motion } from \"framer-motion\";\r\nimport { FaBriefcase, FaCalendarAlt, FaCertificate } from \"react-icons/fa\";\r\n\r\n// Skeleton loader for Experience\r\nfunction ExperienceSkeleton({ count = 4 }) {\r\n  return (\r\n    <div className=\"grid gap-6 grid-cols-1 sm:grid-cols-2\">\r\n      {Array.from({ length: count }).map((_, idx) => (\r\n        <div\r\n          key={idx}\r\n          className=\"relative rounded-xl bg-gray-200 dark:bg-gray-700 p-5 sm:p-6 animate-pulse h-56 sm:h-60\"\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Experience() {\r\n  const [experiences, setExperiences] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchExperiences = async () => {\r\n      try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_BASE}/api/experience`);\r\n        setExperiences(\r\n          res.data.sort((a, b) => {\r\n            if (!a.endDate && b.endDate) return -1;\r\n            if (a.endDate && !b.endDate) return 1;\r\n            if (!a.endDate && !b.endDate) return new Date(b.startDate) - new Date(a.startDate);\r\n            return new Date(b.endDate) - new Date(a.endDate);\r\n          })\r\n        );\r\n      } catch (err) {\r\n        console.error(\"Error fetching experiences:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchExperiences();\r\n  }, []);\r\n\r\n  return (\r\n    <section\r\n      id=\"experience\"\r\n      className=\"py-12 sm:py-16 bg-gradient-to-b from-white to-gray-50 dark:from-gray-950 dark:to-gray-900\"\r\n    >\r\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <h2 className=\"text-3xl sm:text-4xl font-extrabold mb-10 sm:mb-12 text-center text-gray-900 dark:text-white\">\r\n          Experience\r\n        </h2>\r\n\r\n        {loading ? (\r\n          <ExperienceSkeleton count={4} />\r\n        ) : experiences.length === 0 ? (\r\n          <p className=\"text-center py-10 text-gray-500 dark:text-gray-400\">\r\n            No experiences available.\r\n          </p>\r\n        ) : (\r\n          <div className=\"grid gap-6 grid-cols-1 sm:grid-cols-2\">\r\n            {experiences.map((exp, idx) => (\r\n              <motion.div\r\n                key={exp._id}\r\n                initial={{ opacity: 0, y: 30 }}\r\n                whileInView={{ opacity: 1, y: 0 }}\r\n                viewport={{ once: true }}\r\n                transition={{ duration: 0.5, delay: idx * 0.1 }}\r\n                className=\"relative rounded-xl shadow-md hover:shadow-xl transition-transform transform hover:-translate-y-1\"\r\n              >\r\n                {/* Accent bar */}\r\n                <div className=\"absolute top-0 left-0 w-full h-1.5 bg-indigo-500 rounded-t-xl\"></div>\r\n\r\n                <div className=\"p-4 sm:p-6\">\r\n                  <div className=\"flex items-center gap-3 sm:gap-4 mb-3 sm:mb-4\">\r\n                    {exp.logo ? (\r\n                      <img\r\n                        src={exp.logo}\r\n                        alt={exp.company}\r\n                        className=\"w-12 h-12 sm:w-14 sm:h-14 object-contain rounded-lg border border-gray-200 dark:border-gray-700\"\r\n                        loading=\"lazy\"\r\n                        decoding=\"async\"\r\n                      />\r\n                    ) : (\r\n                      <div className=\"w-12 h-12 sm:w-14 sm:h-14 flex items-center justify-center bg-indigo-100 dark:bg-indigo-700 rounded-lg\">\r\n                        <FaBriefcase className=\"text-indigo-600 dark:text-indigo-200 text-lg sm:text-xl\" />\r\n                      </div>\r\n                    )}\r\n\r\n                    <div className=\"flex-1\">\r\n                      <h3 className=\"text-sm sm:text-lg font-bold text-gray-900 dark:text-white\">\r\n                        {exp.role}\r\n                      </h3>\r\n                      <p className=\"text-xs sm:text-sm text-gray-600 dark:text-gray-300\">\r\n                        {exp.company}{\" \"}\r\n                        {exp.location && (\r\n                          <span className=\"text-gray-400\">• {exp.location}</span>\r\n                        )}\r\n                      </p>\r\n                      <p className=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400 flex items-center gap-1 sm:gap-2 mt-1\">\r\n                        <FaCalendarAlt className=\"text-indigo-500\" />\r\n                        {new Date(exp.startDate).toLocaleDateString(\"en-US\", {\r\n                          month: \"short\",\r\n                          year: \"numeric\",\r\n                        })}{\" \"}\r\n                        –{\" \"}\r\n                        {exp.endDate\r\n                          ? new Date(exp.endDate).toLocaleDateString(\"en-US\", {\r\n                              month: \"short\",\r\n                              year: \"numeric\",\r\n                            })\r\n                          : \"Present\"}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {exp.description && (\r\n                    <p className=\"text-gray-700 dark:text-gray-300 text-xs sm:text-sm leading-relaxed\">\r\n                      {exp.description}\r\n                    </p>\r\n                  )}\r\n\r\n                  {exp.responsibilities?.length > 0 && (\r\n                    <ul className=\"mt-2 sm:mt-3 list-disc list-inside text-gray-700 dark:text-gray-300 text-xs sm:text-sm space-y-1\">\r\n                      {exp.responsibilities.map((task, idx) => (\r\n                        <li key={idx}>{task}</li>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n\r\n                  {exp.skills?.length > 0 && (\r\n                    <div className=\"mt-2 sm:mt-4 flex flex-wrap gap-1 sm:gap-2\">\r\n                      {exp.skills.map((skill, idx) => (\r\n                        <span\r\n                          key={idx}\r\n                          className=\"px-2 sm:px-3 py-1 text-[9px] sm:text-xs bg-indigo-100 dark:bg-indigo-700 text-indigo-800 dark:text-indigo-200 rounded-full\"\r\n                        >\r\n                          {skill}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n\r\n                  {exp.certificateUrl && (\r\n                    <div className=\"mt-2 sm:mt-4\">\r\n                      <a\r\n                        href={exp.certificateUrl}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"inline-flex items-center gap-2 text-xs sm:text-sm font-medium text-indigo-600 dark:text-indigo-400 rounded hover:underline transition-colors duration-200\"\r\n                      >\r\n                        <FaCertificate className=\"text-indigo-500 dark:text-indigo-300 text-xs sm:text-sm\" />\r\n                        View Certificate\r\n                      </a>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"names":["ExperienceSkeleton","_ref","count","_jsx","className","children","Array","from","length","map","_","idx","Experience","experiences","setExperiences","useState","loading","setLoading","useEffect","async","res","axios","get","concat","process","data","sort","a","b","endDate","Date","startDate","err","console","error","fetchExperiences","id","_jsxs","exp","_exp$responsibilities","_exp$skills","motion","div","initial","opacity","y","whileInView","viewport","once","transition","duration","delay","logo","src","alt","company","decoding","FaBriefcase","role","location","FaCalendarAlt","toLocaleDateString","month","year","description","responsibilities","task","skills","skill","certificateUrl","href","target","rel","FaCertificate","_id"],"sourceRoot":""}